name: 🚀 Deploy
on:
  push:
    branches:
      - main
      - dev
  pull_request: {}

permissions:
  actions: write
  contents: read

jobs:
  letterpress-build:
    name: 🏗 Build ✉️🗜
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: letterpress
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1
        with:
          working-directory: letterpress

      - name: 🏗 Build ✉️🗜
        run: npm run build

      - name: ♻️ Upload ✉️🗜dist folder
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: ./letterpress/dist

  letterpress-playwright:
    name: 🧪 Test ✉️🗜 with 🎭
    needs: letterpress-build
    defaults:
      run:
        working-directory: letterpress
    runs-on: ubuntu-20.04
    container:
      image: mcr.microsoft.com/playwright:v1.29.0-focal
    strategy:
      fail-fast: false
      matrix:
        project: [chromium, firefox, webkit]

    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: 🛬 Download dist artifact
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: ./letterpress/dist

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1
        with:
          useLockFile: true
          working-directory: letterpress
          install-command: npm i --ignore-scripts

      - name: 📲 Install esbuild (binary workaround)
        working-directory: ./letterpress
        run: npm i -D esbuild-linux-64

      - name: 🎭 Install Playwright
        working-directory: ./letterpress
        run: npx playwright install --with-deps

      - name: 👩‍🔬 Test with Playwright 🎭
        working-directory: ./letterpress
        run: HOME=/root npx playwright test --project=${{ matrix.project }}

      - name: 🆙 Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: playwright-report
          path: ./letterpress/playwright-report

  letterpress-lint:
    name: 🔬 Lint ✉️🗜
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: letterpress
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1
        with:
          working-directory: letterpress

      - name: 🔬 Lint
        run: npm run lint

  newsroom-lint:
    name: 🔬 Lint 📰👩‍💻🧑‍💻👨‍💻
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: newsroom
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1
        with:
          useLockFile: false
          working-directory: newsroom

      - name: 🔬 Lint
        run: npm run lint

  newsroom-typecheck:
    name: ☑️ʦ TypeScript
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1

      - name: 📸 Copy 📦 packages
        run: npm run copy

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1
        with:
          working-directory: newsroom

      - name: 🔎 Type check
        run: npm run typecheck --if-present
        working-directory: newsroom

  newsroom-vitest:
    name: ⚡ Vitest
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: newsroom
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1
        with:
          useLockFile: false
          working-directory: newsroom

      - name: ⚡ Run vitest
        run: npm run test -- --coverage

  cypress:
    name: ⚫️ Cypress
    runs-on: ubuntu-latest
    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: 🏄 Copy test env vars
        run: |
          cp newsroom/.env.example newsroom/.env
          cp newspaper/.env.example newspaper/.env
          cp bootstrap/.env.example bootstrap/.env

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1

      - name: 📸 Copy 📦 packages
        run: npm run copy

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1
        with:
          working-directory: newsroom

      - name: 🐳 Docker compose
        # the sleep is just there to give time for postgres to get started
        run: docker-compose up -d postgres && sleep 3
        # env:
        #   DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/postgres"

      # - name: 🛠 Setup Database
      #   run: |
      #     cd newsroom
      #     npx prisma migrate reset --force

      - name: ⚙️ Build remix
        working-directory: newsroom
        run: npm run build

      - name: 🌳 Cypress run
        uses: cypress-io/github-action@v4
        with:
          start: npm run build:prismatic && echo "bla" && npm run start:mocks
          wait-on: "http://localhost:8811"
          working-directory: newsroom
        env:
          PORT: "8811"

  # build:
  #   name: 🐳 Build
  #   # only build/deploy main branch on pushes
  #   if: ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') && github.event_name == 'push' }}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: 🛑 Cancel Previous Runs
  #       uses: styfle/cancel-workflow-action@0.11.0

  #     - name: ⬇️ Checkout repo
  #       uses: actions/checkout@v3

  #     - name: 👀 Read app name
  #       uses: SebRollen/toml-action@v1.0.0
  #       id: app_name
  #       with:
  #         file: "newsroom/fly.toml"
  #         field: "app"

  #     - name: 🐳 Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2

  #     # Setup cache
  #     - name: ⚡️ Cache Docker layers
  #       uses: actions/cache@v3
  #       with:
  #         path: /tmp/.buildx-cache
  #         key: ${{ runner.os }}-buildx-${{ github.sha }}
  #         restore-keys: |
  #           ${{ runner.os }}-buildx-

  #     - name: 🔑 Fly Registry Auth
  #       uses: docker/login-action@v2
  #       with:
  #         registry: registry.fly.io
  #         username: x
  #         password: ${{ secrets.FLY_API_TOKEN }}

  #     - name: 🐳 Docker build
  #       uses: docker/build-push-action@v3
  #       with:
  #         context: newsroom/.
  #         push: true
  #         tags: registry.fly.io/${{ steps.app_name.outputs.value }}:${{ github.ref_name }}-${{ github.sha }}
  #         build-args: |
  #           COMMIT_SHA=${{ github.sha }}
  #         cache-from: type=local,src=/tmp/.buildx-cache
  #         cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

  #     # This ugly bit is necessary if you don't want your cache to grow forever
  #     # till it hits GitHub's limit of 5GB.
  #     # Temp fix
  #     # https://github.com/docker/build-push-action/issues/252
  #     # https://github.com/moby/buildkit/issues/1896
  #     - name: 🚚 Move cache
  #       run: |
  #         rm -rf /tmp/.buildx-cache
  #         mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  # deploy:
  #   name: 🚀 Deploy
  #   runs-on: ubuntu-latest
  #   needs: [lint, typecheck, vitest, cypress, build]
  #   # only build/deploy main branch on pushes
  #   if: ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') && github.event_name == 'push' }}

  #   steps:
  #     - name: 🛑 Cancel Previous Runs
  #       uses: styfle/cancel-workflow-action@0.11.0

  #     - name: ⬇️ Checkout repo
  #       uses: actions/checkout@v3

  #     - name: 🛠 Change directory
  #       run: cd newsroom

  #     - name: 👀 Read app name
  #       uses: SebRollen/toml-action@v1.0.0
  #       id: app_name
  #       with:
  #         file: "newsroom/fly.toml"
  #         field: "app"

  #     - name: 🚀 Deploy Staging
  #       if: ${{ github.ref == 'refs/heads/dev' }}
  #       uses: superfly/flyctl-actions@1.3
  #       with:
  #         args: "deploy --app ${{ steps.app_name.outputs.value }}-staging --image registry.fly.io/${{ steps.app_name.outputs.value }}:${{ github.ref_name }}-${{ github.sha }}"
  #       env:
  #         FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  #         FLY_PROJECT_PATH: newsroom

  #     - name: 🚀 Deploy Production
  #       if: ${{ github.ref == 'refs/heads/main' }}
  #       uses: superfly/flyctl-actions@1.3
  #       with:
  #         args: "deploy --image registry.fly.io/${{ steps.app_name.outputs.value }}:${{ github.ref_name }}-${{ github.sha }}"
  #       env:
  #         FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  #         FLY_PROJECT_PATH: newsroom
